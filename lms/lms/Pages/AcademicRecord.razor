@page "/academic-record"
@inject NavigationManager Navigation
@inject IListStudents listStudents
@using MudBlazor;
@using lms.Domain
@using lms.UseCases.Manager.AcademicRecord

<PageTitle>Registro Acadêmico</PageTitle>

<MudPaper Elevation="1" Class="title-container">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="title">
        Registro Acadêmico
    </MudText>
</MudPaper>

<MudTabs @bind-ActivePanelIndex="activeTab"
         Centered="true"
         ScrollButtons="ScrollButtons.Auto"
         Class="tabs-container">

    <MudTabPanel Text="Alunos">

        <div class="d-flex justify-content-center justify-content-md-start btn">
            <MudButton Class="edit-btn"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.AddCircle"
                       Href="/academic-record/new"
                       FullWidth="true">
                Novo Aluno
            </MudButton>
        </div>
        <MudTable Items="students" Hover="true" Bordered="true" Striped="true" Dense="true" Class="academic-record-container">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Registros Acadêmicos</MudText>
            </ToolBarContent>

            <HeaderContent>
                <MudTh>Nome</MudTh>
                <MudTh>RM</MudTh>
                <MudTh>Ano de Ingresso</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Turma</MudTh>
                <MudTh>Ações</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd>@context.User.FullName</MudTd>
                <MudTd>@context.EnrollmentNumber</MudTd>
                <MudTd>@context.EnrollmentDate</MudTd>
                <MudTd>Matriculado</MudTd>
                <MudTd>ClassName</MudTd>
                <MudTd>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" @onclick="() => EditRecord(context.Id)">
                        Editar
                    </MudButton>
                </MudTd>
            </RowTemplate>
        </MudTable>

    </MudTabPanel>
    <MudTabPanel Text="Professores">
        <div class="d-flex justify-content-center justify-content-md-start btn">
            <MudButton Class="edit-btn"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.AddCircle"
                       Href="/academic-record/new-teacher"
                       FullWidth="true">
                Novo Professor
            </MudButton>
        </div>

       <MudTable Items="teacherRecords" Hover="true" Bordered="true" Striped="true" Dense="true" Class="academic-record-container">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Registros de Professores</MudText>
            </ToolBarContent>

            <HeaderContent>
                <MudTh>Nome</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Ações</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd>@context.Name</MudTd>
                <MudTd>@context.Status</MudTd>
                <MudTd>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" @onclick="() => EditTeacher(context.Id)">
                        Editar
                    </MudButton>
                </MudTd>
            </RowTemplate>
        </MudTable>

    </MudTabPanel>

</MudTabs>

@code {
    private IEnumerable<StudentModel> students = [];

    private int activeTab = 0;
    private List<AcademicRecordModel> academicRecords = new List<AcademicRecordModel>
    {
        new AcademicRecordModel { Id = 1, Name = "Ana Silva", RM = "12345", EnrollmentYear = 2020, Status = "Ativo", ClassName = "Turma A" },
        new AcademicRecordModel { Id = 2, Name = "Carlos Santos", RM = "67890", EnrollmentYear = 2019, Status = "Ativo", ClassName = "Turma B" },
        new AcademicRecordModel { Id = 3, Name = "Beatriz Oliveira", RM = "11223", EnrollmentYear = 2021, Status = "Inativo", ClassName = "Turma C" }
    };

    private List<TeacherRecordModel> teacherRecords = new List<TeacherRecordModel>
    {
        new TeacherRecordModel { Id = 1, Name = "José Lima", RM = "99876", HiringYear = 2018, Status = "Ativo", Department = "Matemática" },
        new TeacherRecordModel { Id = 2, Name = "Maria Ferreira", RM = "88765", HiringYear = 2017, Status = "Ativo", Department = "História" },
        new TeacherRecordModel { Id = 3, Name = "João Souza", RM = "77654", HiringYear = 2020, Status = "Inativo", Department = "Português" }
    };

    protected override async Task OnInitializedAsync()
    {
        students = await listStudents.Execute();
    }

    private void EditRecord(Guid id)
    {
        var recordToEdit = students.FirstOrDefault(r => r.Id == id);
        if (recordToEdit != null)
        {
            Navigation.NavigateTo($"/academic-record/{id}/edit");
        }
    }

    private void EditTeacher(int id)
    {
        var teacherToEdit = teacherRecords.FirstOrDefault(t => t.Id == id);
        if (teacherToEdit != null)
        {
            Navigation.NavigateTo($"/academic-record/teacher/{id}/edit");
        }
    }

    public class AcademicRecordModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string RM { get; set; }
        public int EnrollmentYear { get; set; }
        public string Status { get; set; }
        public string ClassName { get; set; }
    }

    public class TeacherRecordModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string RM { get; set; }
        public int HiringYear { get; set; }
        public string Status { get; set; }
        public string Department { get; set; }
    }
}
