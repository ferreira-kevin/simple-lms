@page "/students/register"
@using lms.Domain
@inject IStudentService _studentService
@inject NavigationManager Navigation

<h3>Cadastrar Novo Aluno</h3>

<div class="form-container">
    <div class="form-field">
        <label for="fullName">Nome Completo:</label>
        <input type="text" id="fullName" @bind="student.User.FullName" class="input-field" />
    </div>

    <div class="form-field">
        <label for="email">E-mail:</label>
        <input type="email" id="email" @bind="student.User.Email" class="input-field" />
    </div>

    <button @onclick="RegisterStudent" class="register-button">Cadastrar</button>
    <button @onclick="GoBack" class="back-button">Voltar</button>
</div>

@if (registrationSuccess)
{
    <p class="success-message">Aluno cadastrado com sucesso!</p>
}

@code {
    private StudentModel student = new();
    private bool registrationSuccess = false;

    private async Task RegisterStudent()
    {
        if (!string.IsNullOrWhiteSpace(student.User.FullName) && !string.IsNullOrWhiteSpace(student.User.Email))
        {
            try
            {
                //TODO
                // await _studentService.RegisterStudent(student);
                registrationSuccess = true;

                // Limpar o formulário após o sucesso do cadastro
                student = new StudentModel();
            }
            catch (Exception ex)
            {
                // Lidar com o erro, se necessário
                Console.WriteLine("Erro ao cadastrar aluno: " + ex.Message);
            }
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/students");
    }
}

